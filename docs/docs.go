// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate a user and generate a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard-entries": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all entries/rankings for a specific leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "List all entries for a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by participant ID",
                        "name": "participant_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of leaderboard entries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LeaderboardEntryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new entry/ranking in a leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "Create a new leaderboard entry",
                "parameters": [
                    {
                        "description": "Leaderboard entry data",
                        "name": "entry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateLeaderboardEntryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created leaderboard entry",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardEntryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Leaderboard or participant not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard-entries/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a leaderboard entry by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "Get a leaderboard entry by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leaderboard entry details",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardEntryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing leaderboard entry with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "Update a leaderboard entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated leaderboard entry data",
                        "name": "entry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateLeaderboardEntryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated leaderboard entry",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardEntryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a leaderboard entry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "Delete a leaderboard entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard-metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all metrics associated with a specific leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "List all metrics for a leaderboard",
                "responses": {
                    "200": {
                        "description": "List of leaderboard metrics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LeaderboardMetricResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new metric for a leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "Create a new leaderboard metric",
                "parameters": [
                    {
                        "description": "Leaderboard metric data",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateLeaderboardMetricRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created leaderboard metric",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardMetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Leaderboard or metric not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboard-metrics/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a leaderboard metric by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "Get a leaderboard metric by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard Metric ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leaderboard metric details",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardMetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing leaderboard metric with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "Update a leaderboard metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard Metric ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated leaderboard metric data",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateLeaderboardMetricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated leaderboard metric",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardMetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a leaderboard metric by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "Delete a leaderboard metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard Metric ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboards": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all leaderboards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboards"
                ],
                "summary": "List all leaderboards",
                "responses": {
                    "200": {
                        "description": "List of leaderboards",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LeaderboardResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new leaderboard with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboards"
                ],
                "summary": "Create a new leaderboard",
                "parameters": [
                    {
                        "description": "Leaderboard data",
                        "name": "leaderboard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateLeaderboardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created leaderboard",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboards/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a leaderboard by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboards"
                ],
                "summary": "Get a leaderboard by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leaderboard details",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing leaderboard with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboards"
                ],
                "summary": "Update a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated leaderboard data",
                        "name": "leaderboard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateLeaderboardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated leaderboard",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a leaderboard by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboards"
                ],
                "summary": "Delete a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboards/{leaderboard_id}/entries": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all entries/rankings for a specific leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "List all entries for a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by leaderboard ID",
                        "name": "leaderboard_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Filter by participant ID",
                        "name": "participant_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of leaderboard entries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LeaderboardEntryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new entry/ranking in a leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-entries"
                ],
                "summary": "Create a new leaderboard entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard ID",
                        "name": "leaderboard_id",
                        "in": "path"
                    },
                    {
                        "description": "Leaderboard entry data",
                        "name": "entry",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateLeaderboardEntryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created leaderboard entry",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardEntryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Leaderboard or participant not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leaderboards/{leaderboard_id}/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all metrics associated with a specific leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "List all metrics for a leaderboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by leaderboard ID",
                        "name": "leaderboard_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of leaderboard metrics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LeaderboardMetricResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new metric for a leaderboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard-metrics"
                ],
                "summary": "Create a new leaderboard metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Leaderboard ID",
                        "name": "leaderboard_id",
                        "in": "path"
                    },
                    {
                        "description": "Leaderboard metric data",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateLeaderboardMetricRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created leaderboard metric",
                        "schema": {
                            "$ref": "#/definitions/handlers.LeaderboardMetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Leaderboard or metric not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metric-values": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of metric values with optional filtering by metric ID and/or participant ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "List metric values",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter by timestamp (greater than or equal)",
                        "name": "from_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter by timestamp (less than or equal)",
                        "name": "to_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of metric values",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.MetricValueResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new metric value record for a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "Create a new metric value",
                "parameters": [
                    {
                        "description": "Metric value data",
                        "name": "metric_value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMetricValueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created metric value",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricValueResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Metric or participant not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metric-values/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a metric value by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "Get a metric value by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric Value ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric value details",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricValueResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing metric value with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "Update a metric value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric Value ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated metric value data",
                        "name": "metric_value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateMetricValueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated metric value",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricValueResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a metric value by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "Delete a metric value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric Value ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "List all metrics",
                "responses": {
                    "200": {
                        "description": "List of metrics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.MetricResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new metric with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Create a new metric",
                "parameters": [
                    {
                        "description": "Metric data",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMetricRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created metric",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a metric by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get a metric by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric details",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing metric with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Update a metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated metric data",
                        "name": "metric",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateMetricRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated metric",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a metric by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Delete a metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metrics/{metric_id}/values": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of metric values with optional filtering by metric ID and/or participant ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "List metric values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by metric ID",
                        "name": "metric_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter by timestamp (greater than or equal)",
                        "name": "from_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter by timestamp (less than or equal)",
                        "name": "to_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of metric values",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.MetricValueResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new metric value record for a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "Create a new metric value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric ID",
                        "name": "metric_id",
                        "in": "path"
                    },
                    {
                        "description": "Metric value data",
                        "name": "metric_value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMetricValueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created metric value",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricValueResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Metric or participant not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/participants": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all participants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "List all participants",
                "responses": {
                    "200": {
                        "description": "List of participants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ParticipantResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new participant with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Create a new participant",
                "parameters": [
                    {
                        "description": "Participant data",
                        "name": "participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateParticipantRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created participant",
                        "schema": {
                            "$ref": "#/definitions/handlers.ParticipantResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/participants/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a participant by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Get a participant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Participant details",
                        "schema": {
                            "$ref": "#/definitions/handlers.ParticipantResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing participant with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Update a participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated participant data",
                        "name": "participant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateParticipantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated participant",
                        "schema": {
                            "$ref": "#/definitions/handlers.ParticipantResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a participant by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participants"
                ],
                "summary": "Delete a participant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/participants/{participant_id}/metric-values": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of metric values with optional filtering by metric ID and/or participant ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "List metric values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by participant ID",
                        "name": "participant_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter by timestamp (greater than or equal)",
                        "name": "from_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Filter by timestamp (less than or equal)",
                        "name": "to_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of metric values",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.MetricValueResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new metric value record for a participant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metric-values"
                ],
                "summary": "Create a new metric value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Participant ID",
                        "name": "participant_id",
                        "in": "path"
                    },
                    {
                        "description": "Metric value data",
                        "name": "metric_value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMetricValueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created metric value",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricValueResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Metric or participant not found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateLeaderboardEntryRequest": {
            "type": "object",
            "required": [
                "leaderboard_id",
                "participant_id",
                "rank",
                "score"
            ],
            "properties": {
                "last_updated": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "leaderboard_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "participant_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "rank": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "score": {
                    "type": "number",
                    "example": 100.5
                }
            }
        },
        "handlers.CreateLeaderboardMetricRequest": {
            "type": "object",
            "required": [
                "leaderboard_id",
                "metric_id",
                "weight"
            ],
            "properties": {
                "display_priority": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                },
                "leaderboard_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "metric_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440003"
                },
                "weight": {
                    "type": "number",
                    "minimum": 0,
                    "example": 1
                }
            }
        },
        "handlers.CreateLeaderboardRequest": {
            "type": "object",
            "required": [
                "category",
                "name",
                "sort_order",
                "time_frame",
                "type",
                "visibility_scope"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "example": "tournament"
                },
                "description": {
                    "type": "string",
                    "example": "Weekly tournament for active players"
                },
                "end_date": {
                    "type": "string",
                    "example": "2023-01-07T23:59:59Z"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "max_entries": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 100
                },
                "name": {
                    "type": "string",
                    "example": "Weekly Tournament"
                },
                "sort_order": {
                    "type": "string",
                    "enum": [
                        "ascending",
                        "descending"
                    ],
                    "example": "descending"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "time_frame": {
                    "type": "string",
                    "enum": [
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly",
                        "all-time",
                        "custom"
                    ],
                    "example": "weekly"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "individual",
                        "team"
                    ],
                    "example": "individual"
                },
                "visibility_scope": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ],
                    "example": "public"
                }
            }
        },
        "handlers.CreateMetricRequest": {
            "type": "object",
            "required": [
                "aggregation_type",
                "data_type",
                "name",
                "reset_period"
            ],
            "properties": {
                "aggregation_type": {
                    "type": "string",
                    "enum": [
                        "sum",
                        "average",
                        "count",
                        "min",
                        "max",
                        "last"
                    ],
                    "example": "sum"
                },
                "data_type": {
                    "type": "string",
                    "enum": [
                        "integer",
                        "decimal",
                        "boolean",
                        "string"
                    ],
                    "example": "integer"
                },
                "description": {
                    "type": "string",
                    "example": "Number of calls completed in a month"
                },
                "is_higher_better": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "monthly_calls_completed"
                },
                "reset_period": {
                    "type": "string",
                    "enum": [
                        "none",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                    ],
                    "example": "monthly"
                },
                "unit": {
                    "type": "string",
                    "example": "calls"
                }
            }
        },
        "handlers.CreateMetricValueRequest": {
            "type": "object",
            "required": [
                "metric_id",
                "participant_id",
                "value"
            ],
            "properties": {
                "context": {},
                "metric_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "participant_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "source": {
                    "type": "string",
                    "example": "call_system"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "value": {
                    "type": "number",
                    "example": 42.5
                }
            }
        },
        "handlers.CreateParticipantRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "external_id": {
                    "type": "string",
                    "example": "external-123"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "individual",
                        "team",
                        "group"
                    ],
                    "example": "individual"
                }
            }
        },
        "handlers.LeaderboardEntryResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440002"
                },
                "last_updated": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "leaderboard_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "participant_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "rank": {
                    "type": "integer",
                    "example": 1
                },
                "score": {
                    "type": "number",
                    "example": 100.5
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "handlers.LeaderboardMetricResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "display_priority": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440004"
                },
                "leaderboard_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "metric_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440003"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "weight": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handlers.LeaderboardResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "tournament"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Weekly tournament for active players"
                },
                "end_date": {
                    "type": "string",
                    "example": "2023-01-07T23:59:59Z"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "max_entries": {
                    "type": "integer",
                    "example": 100
                },
                "name": {
                    "type": "string",
                    "example": "Weekly Tournament"
                },
                "sort_order": {
                    "type": "string",
                    "example": "descending"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "time_frame": {
                    "type": "string",
                    "example": "weekly"
                },
                "type": {
                    "type": "string",
                    "example": "individual"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "visibility_scope": {
                    "type": "string",
                    "example": "public"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "example": "admin"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                },
                "user_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "handlers.MetricResponse": {
            "type": "object",
            "properties": {
                "aggregation_type": {
                    "type": "string",
                    "example": "sum"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "data_type": {
                    "type": "string",
                    "example": "integer"
                },
                "description": {
                    "type": "string",
                    "example": "Number of calls completed in a month"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "is_higher_better": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "monthly_calls_completed"
                },
                "reset_period": {
                    "type": "string",
                    "example": "monthly"
                },
                "unit": {
                    "type": "string",
                    "example": "calls"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "handlers.MetricValueResponse": {
            "type": "object",
            "properties": {
                "context": {},
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440002"
                },
                "metric_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "participant_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "source": {
                    "type": "string",
                    "example": "call_system"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "value": {
                    "type": "number",
                    "example": 42.5
                }
            }
        },
        "handlers.ParticipantResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "external_id": {
                    "type": "string",
                    "example": "external-123"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "type": {
                    "type": "string",
                    "example": "individual"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "securepass123"
                },
                "username": {
                    "type": "string",
                    "example": "newuser"
                }
            }
        },
        "handlers.UpdateLeaderboardEntryRequest": {
            "type": "object",
            "properties": {
                "last_updated": {
                    "type": "string",
                    "example": "2023-01-02T00:00:00Z"
                },
                "rank": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "score": {
                    "type": "number",
                    "example": 200.75
                }
            }
        },
        "handlers.UpdateLeaderboardMetricRequest": {
            "type": "object",
            "properties": {
                "display_priority": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "weight": {
                    "type": "number",
                    "minimum": 0,
                    "example": 2.5
                }
            }
        },
        "handlers.UpdateLeaderboardRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "competition"
                },
                "description": {
                    "type": "string",
                    "example": "Updated description"
                },
                "end_date": {
                    "type": "string",
                    "example": "2023-02-28T23:59:59Z"
                },
                "is_active": {
                    "type": "boolean",
                    "example": false
                },
                "max_entries": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 50
                },
                "name": {
                    "type": "string",
                    "example": "Updated Tournament"
                },
                "sort_order": {
                    "type": "string",
                    "enum": [
                        "ascending",
                        "descending"
                    ],
                    "example": "ascending"
                },
                "start_date": {
                    "type": "string",
                    "example": "2023-02-01T00:00:00Z"
                },
                "time_frame": {
                    "type": "string",
                    "enum": [
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly",
                        "all-time",
                        "custom"
                    ],
                    "example": "monthly"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "individual",
                        "team"
                    ],
                    "example": "team"
                },
                "visibility_scope": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ],
                    "example": "private"
                }
            }
        },
        "handlers.UpdateMetricRequest": {
            "type": "object",
            "properties": {
                "aggregation_type": {
                    "type": "string",
                    "enum": [
                        "sum",
                        "average",
                        "count",
                        "min",
                        "max",
                        "last"
                    ],
                    "example": "sum"
                },
                "data_type": {
                    "type": "string",
                    "enum": [
                        "integer",
                        "decimal",
                        "boolean",
                        "string"
                    ],
                    "example": "integer"
                },
                "description": {
                    "type": "string",
                    "example": "Number of texts answered in a month"
                },
                "is_higher_better": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "monthly_texts_answered"
                },
                "reset_period": {
                    "type": "string",
                    "enum": [
                        "none",
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly"
                    ],
                    "example": "monthly"
                },
                "unit": {
                    "type": "string",
                    "example": "texts"
                }
            }
        },
        "handlers.UpdateMetricValueRequest": {
            "type": "object",
            "properties": {
                "context": {},
                "source": {
                    "type": "string",
                    "example": "text_system"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-02T00:00:00Z"
                },
                "value": {
                    "type": "number",
                    "example": 50.75
                }
            }
        },
        "handlers.UpdateParticipantRequest": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "example": "external-123"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "individual",
                        "team",
                        "group"
                    ],
                    "example": "team"
                }
            }
        },
        "middleware.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Leaderboard Service API",
	Description:      "API for managing leaderboards, entries, participants, and metrics",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
